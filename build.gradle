apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

applicationName = 'cloud-config'
sourceCompatibility = 1.7
version = '1.0'

buildscript {
    repositories {
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'me.champeau.gradle.antlr4'

// make the Java compile task depend on the antlr4 task
compileJava.dependsOn antlr4

// add the generated source files to the list of java sources
sourceSets.main.java.srcDirs += antlr4.output

// add antlr4 to classpath
configurations {
    compile.extendsFrom antlr4
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Cloud Configurator',
                'Implementation-Version': version,
                'Main-Class': 'com.sciul.cloud_configurator.App'
    }
}

idea.module {
    excludeDirs -= file(buildDir) //1
    buildDir.listFiles({d,f->f != 'generated-src'} as FilenameFilter).each {excludeDirs += it}} //2

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'com.amazonaws:aws-java-sdk:1.9.5'
    compile 'org.springframework:spring-context:4.0.6.RELEASE'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'commons-cli:commons-cli:1.2'
    compile 'cglib:cglib:3.0'
    compile 'org.springframework:spring-core:4.0.6.RELEASE'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

mainClassName = "com.sciul.cloud_configurator.App"

run {
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
}


test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}
